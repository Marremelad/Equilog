version: '3.8' # Se till att du använder en version som stöder Swarm-funktioner
services:
  equilog-backend:
    image: registry.chasacademy.dev/cc25group-10/equilog-backend/dotnet:${DOCKER_TAG}
    secrets:
      - appsettings.json
    volumes:
      - /run/secrets/appsettings.json:/App/appsettings.json # Skriv över appsettings.json från Portainer Secrets!
    networks:
      - prod-equilog-internal-network
      - traefik-public
    deploy:
      mode: replicated
      # replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.api-${STACK_NAMN}-http.rule=Host(`api.${STACK_NAMN}.cc25.chasacademy.dev`)
        - traefik.http.routers.api-${STACK_NAMN}-http.entrypoints=http
        - traefik.http.routers.api-${STACK_NAMN}-http.middlewares=https-redirect
        - traefik.http.routers.api-${STACK_NAMN}-https.rule=Host(`api.${STACK_NAMN}.cc25.chasacademy.dev`)
        - traefik.http.routers.api-${STACK_NAMN}-https.entrypoints=https
        - traefik.http.routers.api-${STACK_NAMN}-https.tls=true
        - traefik.http.routers.api-${STACK_NAMN}-https.tls.certresolver=le
        - traefik.http.routers.api-${STACK_NAMN}-https.tls.domains[0].main=cc25.chasacademy.dev
        - traefik.http.routers.api-${STACK_NAMN}-https.tls.domains[0].sans=*.cc25.chasacademy.dev
        - traefik.http.services.api-${STACK_NAMN}.loadbalancer.server.port=80
    environment:
      - DB_PASSWORD=${DB_PASSWORD} # Exportera DB-lösenordet från GitLab-variabler, entrypoint.sh-scriptet för databasinitiering behöver det!
      - ASPNETCORE_ENVIRONMENT=Production # appsettings.json läses in, värde Development gör att apsetting.Development.json läses in!
      # - ASPNETCORE_URLS=http://+:80 #Skriver över variabeln från appsettings.json
      # - ConnectionStrings__DefaultConnection=Server=prod-equilog-db;Database=EquilogDB;User=sa;Password=${DB_PASSWORD};TrustServerCertificate=True
      # - CorsConnection__Url=https://g10-main.cc25.chasacademy.dev  # Lägg till denna rad för att skriva över CORS-URL:en
      # appsetting.json läses in från Portainer secrets!
    depends_on:
      - prod-equilog-db # Väntar på databas tjänsten att komma upp korrekt.

  prod-equilog-db:
    image: registry.chasacademy.dev/cc25group-10/equilog-backend/mssql-db:${DOCKER_TAG}
    networks:
      - prod-equilog-internal-network # Intern nätverk räcker för databasen!
      # - traefik-public
    deploy:
      mode: replicated
      # replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
          - node.labels.storage == true # Kör på storage noden!
    volumes:
      - g10-prod-mssql-persistent-db-dir:/var/opt/mssql
    environment:
      - ACCEPT_EULA=YES
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Developer
      - MSSQL_AGENT_ENABLED=true
    depends_on:
      - prod-azurite

  prod-azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --skipApiVersionCheck --disableProductStyleUrl --loose --location /data --debug /data/debug.log
    networks:
      - prod-equilog-internal-network # Internal net
      # Uncomment below to expose azurite to internet
      - traefik-public
    volumes:
      - g10-prod-blob-data:/data

    deploy:
      mode: replicated
      # replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
          - node.labels.storage == true
      # Uncomment below to expose azurite to internet
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public

        # Blob Service
        - traefik.http.routers.blobstorage-http.rule=Host(`azuritegrup10blob.cc25.chasacademy.dev`)
        - traefik.http.routers.blobstorage-http.entrypoints=http
        - traefik.http.routers.blobstorage-http.middlewares=https-redirect
        - traefik.http.routers.blobstorage-https.rule=Host(`azuritegrup10blob.cc25.chasacademy.dev`)
        - traefik.http.routers.blobstorage-https.entrypoints=https
        - traefik.http.routers.blobstorage-https.tls=true
        - traefik.http.routers.blobstorage-https.tls.certresolver=le
        - traefik.http.routers.blobstorage-https.service=blobstorage-service
        - traefik.http.services.blobstorage-service.loadbalancer.server.port=10000
        - traefik.http.services.blobstorage-service.loadbalancer.server.scheme=http

        # Queue Service
        - traefik.http.routers.queuestorage-http.rule=Host(`azuritegrup10queue.cc25.chasacademy.dev`)
        - traefik.http.routers.queuestorage-http.entrypoints=http
        - traefik.http.routers.queuestorage-http.middlewares=https-redirect
        - traefik.http.routers.queuestorage-https.rule=Host(`azuritegrup10queue.cc25.chasacademy.dev`)
        - traefik.http.routers.queuestorage-https.entrypoints=https
        - traefik.http.routers.queuestorage-https.tls=true
        - traefik.http.routers.queuestorage-https.tls.certresolver=le
        - traefik.http.routers.queuestorage-https.service=queuestorage-service
        - traefik.http.services.queuestorage-service.loadbalancer.server.port=10001
        - traefik.http.services.queuestorage-service.loadbalancer.server.scheme=http

        # Table Service
        - traefik.http.routers.tablestorage-http.rule=Host(`azuritegrup10table.cc25.chasacademy.dev`)
        - traefik.http.routers.tablestorage-http.entrypoints=http
        - traefik.http.routers.tablestorage-http.middlewares=https-redirect
        - traefik.http.routers.tablestorage-https.rule=Host(`azuritegrup10table.cc25.chasacademy.dev`)
        - traefik.http.routers.tablestorage-https.entrypoints=https
        - traefik.http.routers.tablestorage-https.tls=true
        - traefik.http.routers.tablestorage-https.tls.certresolver=le
        - traefik.http.routers.tablestorage-https.service=tablestorage-service
        - traefik.http.services.tablestorage-service.loadbalancer.server.port=10002
        - traefik.http.services.tablestorage-service.loadbalancer.server.scheme=http

volumes:
  g10-prod-blob-data:
  g10-prod-mssql-persistent-db-dir:

networks:
  traefik-public:
    external: true
  prod-equilog-internal-network: # se till att nätvereket är skapat i förhand i portainer! Den ska vara internal!
    external: true

secrets:
  appsettings.json:
    external: true
