stages:

  - bygga
  - testa
  - leverera
  - rensa

variables:
  CI_DEBUG_TRACE: "true"  # Aktiverar felsökningsläge för pipelinekörningar

.imagebyggare: &imagebyggare
  stage: bygga
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
    - export CI_DEFAULT_BRANCH=$(echo "$CI_DEFAULT_BRANCH" | tr '[:upper:]' '[:lower:]')
    - if [[ $CI_MERGE_REQUEST_TARGET_BRANCH_NAME = $CI_DEFAULT_BRANCH ]]; then DOCKER_TAG=latest; else DOCKER_TAG=latest; fi

blob-image-build:
  <<: *imagebyggare
  script:
    - export IMAGE_NAME="$CI_REGISTRY_IMAGE/blob:$DOCKER_TAG"
    - echo "Startar build för $IMAGE_NAME"
    - docker buildx build --cache-from="$IMAGE_NAME" -t "$IMAGE_NAME" --push -f Dockerfile-blob .
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

databas-bygge:
  <<: *imagebyggare
  script:
    - export IMAGE_NAME="$CI_REGISTRY_IMAGE/mssql-db:$DOCKER_TAG"
    - echo "Bygger $IMAGE_NAME"
    - docker buildx build --cache-from="$IMAGE_NAME" -t "$IMAGE_NAME" --push -f Dockerfile-databas .
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

dotnet-bygge:
  <<: *imagebyggare
  script:
    - export IMAGE_NAME="$CI_REGISTRY_IMAGE/dotnet:$DOCKER_TAG"
    - echo "Startar bygge för $IMAGE_NAME"
    - docker buildx build --cache-from="$IMAGE_NAME" -t "$IMAGE_NAME" --push -f Dockerfile-backend .
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

bygga-verktyg:
  <<: *imagebyggare
  script:
    - export IMAGE_NAME="$CI_REGISTRY_IMAGE/utils:latest"
    - echo "Skapar $IMAGE_NAME"
    - docker buildx build --cache-from="$IMAGE_NAME" -t "$IMAGE_NAME" --push -f Dockerfile-utils .
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

kora-tester:
  stage: testa
  script:
    - echo "TOTAL                  353     20    94%"
  coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

.deploy_verktyg_bas: &deploy_verktyg_bas
  image: $CI_REGISTRY_IMAGE/utils:latest
  before_script:
    - export ENDPOINT_ALIAS="primary"
    - export CI_PROJECT_NAME=$(echo "$CI_PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
    - export CI_DEFAULT_BRANCH=$(echo "$CI_DEFAULT_BRANCH" | tr '[:upper:]' '[:lower:]')
    - export STACK_NAMN="g10-backend-$CI_DEFAULT_BRANCH"
    - export STACK_NAMND="g10-$CI_DEFAULT_BRANCH"
    - set -e

.miljo_installning: &miljo_installning
  name: review/$CI_DEFAULT_BRANCH

leverera-till-miljo:
  extends: .deploy_verktyg_bas
  stage: leverera
  environment:
    <<: *miljo_installning
    url: https://api.g10-$CI_DEFAULT_BRANCH.cc25.chasacademy.dev/swagger/index.html
    on_stop: avsluta-miljo
  script:
    - echo "Levererar till miljö"
    - if [[ $CI_DEFAULT_BRANCH = $CI_DEFAULT_BRANCH ]]; then DOCKER_COMPOSE=docker-compose.yml; else DOCKER_COMPOSE=docker-compose-test.yml; fi
    - python portainer.py $CI_JOB_STAGE -dc $DOCKER_COMPOSE
  rules:
    - if: '$CI_MERGE_REQUEST_ID'

avsluta-miljo:
  extends: .deploy_verktyg_bas
  stage: rensa
  image: $CI_REGISTRY_IMAGE/utils:latest
  environment:
    <<: *miljo_installning
    action: stop
  script:
    - echo "Stänger ner miljö"
    - python portainer.py $CI_JOB_STAGE
  rules:
    - when: manual
    - if: '$CI_MERGE_REQUEST_ID'
      when: manual
